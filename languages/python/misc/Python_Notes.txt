# This is Python Notes

# Comments
- Examples
* References

---------------------------------------------------------------
---------------------Built-In Types/DataStructure--------------
# Numeric
~ num=1/3.0
  print '%e' % num
  print '%4.2f' % num

# Set
~ set('abcde')
~ (['a','b','c','d','e'])

# Boolean
~ condition1 & condition2
~ condition1 | condition2
~ x<y<z --> x<y & y<z

# List
- list.pop()
- sorted(list)

# Dictionary
- ['A':X,'B':Y,'etc':etc]
- dict['A'] (A should be index)

# String
- str.replace('a','b')

? Decimal
? Fraction

# Common Referencing
# When sharing a same variable type, change one var will affect another
- a=3,b=3,a=4-->b=3
- a=b=[],a.append(3)-->b=[3]

---------------------------------------------------------------
------------------------Built-In Functions---------------------
map(func,collection) # apply func to item in the collection
filter()
reduce()
reload(modules) # from imp import reload, reload will reload modules.

---------------------------------------------------------------
------------------------Keywords/Expression--------------------
lambda
yield

# Print
- print 'things need to be printed'
- print '%r' % (variables) '%r'-> formatters 
- print "{idx1:type1},{idx2:type2},...,{idx n:type n}".format(var1,var2,...,var n)
- print """ multiplie
	    line
	    strings
      	""" 

# Delete
- del sth

# repr print which has more detail
- repr(x)

# str print
- str(x)

---------------------------------------------------------------
---------------------------Files I/O---------------------------

# Files operation
- txt=open(filename)
- txt.truncate() 
- txt.read()
- txt.readline()
- txt.write()
- txt.close()

---------------------------------------------------------------
---------------------------Functions---------------------------
# define functions
- def fun():
	expression
	return x1,x2,etc
